{"version":3,"sources":["components/recipe.js","components/searchCard.js","components/searchResults.js","components/searchBar.js","components/home.js","components/login.js","App.js","index.js"],"names":["ArrayToList","props","items","numSections","list","length","ordered","i","section","itemList","numItems","header","j","push","key","toString","className","Recipe","state","status","recipeID","match","params","recipeid","ingredients","directions","fetch","this","res","json","data","error","setState","URL","imageURL","author","recipeName","difficulty","totalTime","prepTime","inactiveTime","activeTime","cookTime","yield","source","Helmet","id","src","alt","width","target","rel","href","Component","SearchCard","recipe","info","link","_id","SearchResults","results","maxResultsPerPage","overflow","Array","from","slice","map","SearchBar","getResults","a","input","fetchURL","searchType","maxResults","resultsFound","loading","emptyInput","vals","searchResults","updateInput","val","value","updateSearchType","currentTarget","override","css","name","onSubmit","type","autoComplete","placeholder","onChange","checked","htmlFor","height","title","Home","Login","submitPage","usernameInput","console","log","passwordInput","username","password","App","to","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2097720.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { Helmet } from 'react-helmet';\nimport '../styles/recipe.css';\n\n//Parse an array of ingredients or directions into a JSX list\nfunction ArrayToList(props) {\n    let items = [];\n\n    //Iterate through each section\n    const numSections = props.list.length;\n    const ordered = props.ordered;\n\n    for (let i = 0; i < numSections; i++) {\n        let section = [];\n        let itemList = props.list[i];\n\n        //Store each item in the inner array as an HTML list item\n        let numItems = itemList.length;\n        let header = itemList[0];\n\n        for (let j = 1; j < numItems; j++) {\n            section.push (\n                <li key={itemList[j].toString()}>\n                    {itemList[j]}\n                </li>\n            );\n        }\n\n        //Print the section header if noteworthy\n        if (header !== 'main') {\n            items.push (\n                <div className='sectionHeader'\n                    key={header.toString()}>\n                    {header}\n                </div>\n            );\n        }\n\n        //Print the list of items\n        items.push (\n            <div className='sectionData'>\n                { ordered ?\n                    <ol key={section.toString()}>\n                        {section}\n                    </ol>\n                    :\n                    <ul key={section.toString()}>\n                        {section}\n                    </ul>\n                }\n            </div>\n        );\n    }\n\n    return (\n        <div>{items}</div>\n    );\n}\n\n//Display full recipe data\nclass Recipe extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: 1, //Remains 1 if the recipe is found, 0 otherwise\n            recipeID: props.match.params.recipeid, //URL parameter\n            ingredients: '',\n            directions: ''\n        };\n    }\n\n    //Gather data from server JSON response\n    async componentDidMount() {\n        const res = await fetch('/recipe/' + this.state.recipeID);\n        const data = await res.json();\n\n        //Recipe not found\n        if (data.error) {\n            this.setState({ status: 0 });\n        }\n        //Recipe found\n        else {\n            this.setState({\n                URL:          data.URL,\n                imageURL:     data.imageURL,\n                author:       data.author,\n                recipeName:   data.recipeName,\n                difficulty:   data.difficulty,\n                totalTime:    data.totalTime,\n                prepTime:     data.prepTime,\n                inactiveTime: data.inactiveTime,\n                activeTime:   data.activeTime,\n                cookTime:     data.cookTime,\n                yield:        data.yield,\n                ingredients:  data.ingredients,\n                directions:   data.directions,\n                source:       data.source\n            });\n        }\n    }\n\n    render() {\n        //Recipe not found\n        if (!this.state.status) {\n            return (\n                <div>\n                    <h1>Recipe not found!</h1>\n                    <h3>Please try again</h3>\n                </div>\n            );\n        }\n        //Recipe found\n        else {\n            return (\n                <div>\n                    { this.state.recipeName ?\n                        <Helmet>\n                            <title>{\"Magellan - \" + this.state.recipeName}</title>\n                        </Helmet>\n                        :\n                        <Helmet>\n                            <title>{\"Magellan\"}</title>\n                        </Helmet>\n                    }\n\n                    <div id='header'>\n                        <div id='recipeName'>\n                            {this.state.recipeName}\n                        </div>\n\n                        <div id='author'>\n                            by {this.state.author}\n                        </div>\n\n                        <div id='source'>\n                            Courtesy of\n                            <span id='sourceText'>\n                                {this.state.source}\n                            </span>\n                        </div>\n                    </div>\n\n                    <div id='image'>\n                        { this.state.imageURL ?\n                            <img src={this.state.imageURL} alt='' width='600'></img>\n                            : <p className='invisibleElement'></p>\n                        }\n\n                        <div id='sourceLink'>\n                            <a target='_blank' rel='noopener noreferrer' href={this.state.URL}>Original Recipe</a>\n                        </div>\n                    </div>\n                    \n                    <div id='details'>\n                        <div id='detailsLeft'>\n                            <div id='difficulty'>\n                                Difficulty:\n                                <span id='difficultyText'>\n                                    {this.state.difficulty}\n                                </span>\n                            </div>\n                            \n                            <div id='yield'>\n                                Yield:\n                                <span id='yieldText'>\n                                    {this.state.yield}\n                                </span>\n                            </div>\n                        </div>\n\n                        <div id='times'>\n                            <div id='totalTime'>\n                                Total Time:\n                                <span id='totalTimeText'>\n                                    {this.state.totalTime}\n                                </span>\n                            </div>\n\n                            <div id='timesList'>\n                                <ul>\n                                    <div id='prepTime'>\n                                        { this.state.prepTime ?\n                                            <li>\n                                                <span id='prepTimeText'>\n                                                    {this.state.prepTime}\n                                                </span>\n                                                prep time\n                                            </li>\n                                            : <p className='invisibleElement'></p>\n                                        }\n                                    </div>\n                                    \n                                    <div id='cookTime'>\n                                        { this.state.cookTime ?\n                                            <li>\n                                                <span id='cookTimeText'>\n                                                    {this.state.cookTime}\n                                                </span>\n                                                cook time\n                                            </li>\n                                            : <p className='invisibleElement'></p>\n                                        }\n                                    </div>\n                                    \n                                    <div id='activeTime'>\n                                        { this.state.activeTime ?\n                                            <li>\n                                                <span id='activeTimeText'>\n                                                    {this.state.activeTime}\n                                                </span>\n                                                active time\n                                            </li>\n                                            : <p className='invisibleElement'></p>\n                                        }\n                                    </div>\n                                    \n                                    <div id='inactiveTime'>\n                                        { this.state.inactiveTime ?\n                                            <li>\n                                                <span id='inactiveTimeText'>\n                                                    {this.state.inactiveTime}\n                                                </span>\n                                                inactive time\n                                            </li>\n                                            : <p className='invisibleElement'></p>\n                                        }\n                                    </div>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div id='ingredients'>\n                        <div className='listHeader'>\n                            Ingredients\n                        </div>\n\n                        <ArrayToList\n                            list={this.state.ingredients}\n                            ordered={false}\n                        />\n                    </div>\n\n                    <div id='directions'>\n                        <div className='listHeader'>\n                            Directions\n                        </div>\n\n                        <ArrayToList\n                            list={this.state.directions}\n                            ordered={true}\n                        />\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Recipe;\n","import React, {Component} from 'react';\nimport '../styles/searchCard.css';\n\nclass SearchCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            recipe: this.props.info\n        };\n    }\n\n    render() {\n        const data = this.state.recipe;\n        const link = `/recipe/${data._id}`;\n\n        return (\n            <div id='card'>\n                 <a className='cardRecipeLink'\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    href={link}>\n                    \n                    <div id='cardInfo'>\n                        <div id='cardRecipeName'>{data.recipeName}</div>\n                        <div id='cardAuthor'>by {data.author}</div>\n                        <div id='cardTotalTime'>{data.totalTime}</div>\n                    </div>\n                </a>\n            </div>\n        );\n    }\n}\n\nexport default SearchCard;\n","import React, {Component} from 'react';\nimport SearchCard from './searchCard.js';\nimport '../styles/searchResults.css';\n\nclass SearchResults extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: this.props.data,\n            maxResultsPerPage: 9 //Arbitrary\n        };\n    }\n\n    render() {\n        //See if there will be extra recipes for a new page\n        const overflow = (this.state.results.length > this.state.maxResultsPerPage);\n        \n        //Grab the recipes we will show, up to the given limit\n        const res = Array.from(this.state.results);\n        const visible = res.slice(0, this.state.maxResultsPerPage);\n\n        //Turn them into search cards\n        const list = visible.map(recipe => (\n            <SearchCard info={recipe} />\n        ));\n\n        return (\n            <div id='resultsContainer'>\n                <h2>Top Results:</h2>\n                <div id='resultsList'>{list}</div>\n\n                { overflow ?\n                    <div>See more results</div>\n                    : <p></p>\n                }\n            </div>\n        );\n    }\n}\n\nexport default SearchResults;\n","import React, {Component} from 'react';\nimport { css } from '@emotion/core';\nimport BarLoader from 'react-spinners/BarLoader';\nimport SearchResults from './searchResults.js';\nimport '../styles/searchBar.css';\n\nclass SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchType: 'name',\n            input: '',\n            emptyInput: false,\n            resultsFound: true,\n            loading: false,\n            results: [],\n            maxResults: 36 //Arbitrary\n        };\n    }\n\n    //Launch a search in the server and store the results\n    getResults = async () => {\n\n        //Ensure they have entered something\n        if (this.state.input) {\n\n            //If so, querty the db\n            const fetchURL = `/search/${this.state.searchType}/${this.state.input}/${this.state.maxResults}`;\n            this.setState({\n                results: [],\n                resultsFound: true,\n                loading: true,\n                emptyInput: false\n            });\n\n            const res = await fetch(fetchURL); //Execute the search\n            const data = await res.json();\n\n            //No search results\n            if (data.error) {\n                this.setState({ resultsFound: false, loading: false });\n            }\n\n            //Create a list of items\n            else {\n                let items = [];\n                const vals = data.searchResults;\n                const numItems = vals.length;\n\n                for (let i = 0; i < numItems; i++) {\n                    items.push(vals[i]);\n                }\n\n                this.setState({\n                    resultsFound: true,\n                    loading: false,\n                    results: items\n                });\n            }\n        }\n        else {\n            this.setState({\n                emptyInput: true,\n                resultsFound: true, //Hide this notice if last search found nothing\n                results: []\n            });\n        }\n    }\n\n    //Save the user's current input in state\n    updateInput = (val) => {\n        this.setState({ input: val.target.value });\n    }\n\n    //Change the search type\n    updateSearchType = (val) => {\n        this.setState({ searchType: val.currentTarget.value });\n    }\n\n    // Search bar - form accepts the search and queries the db\n    render() {\n        //CSS for loading bar\n        const override = css`\n            width: 285px;\n            margin-top: 10px;\n            margin-left: auto;\n            margin-right: auto;\n            background-color: lightgrey;\n        `;\n\n        return (\n            <div id='searchContainer'>\n                <div id='notice'>\n                    Find your next meal!\n                </div>\n\n                <form\n                    name='searchBar'\n                    target='hiddenFrame'\n                    onSubmit={this.getResults}>\n\n                    <div id='searchBarWrapper'>\n                        <input\n                            name='search'\n                            id='searchInput'\n                            type='text'\n                            autoComplete='off'\n                            placeholder='Search for recipes'\n                            onChange={this.updateInput}>\n                        </input>\n\n                        <button\n                            type='submit'\n                            id='searchButton'\n                            className='fa fa-search'>\n                        </button>\n                    </div>\n                    \n                    <div id='searchType'>\n                        Search by:\n\n                        <div id='searchTypeNameWrapper'>\n                            <input\n                                type='radio'\n                                id='searchTypeNameButton'\n                                name='searchType'\n                                value='name'\n                                onChange={this.updateSearchType}\n                                checked={this.state.searchType === 'name' ? true : false}>\n                            </input>\n\n                            <label htmlFor='searchTypeNameButton'>Recipe Name</label>\n                        </div>\n\n                        <div id='searchTypeIngWrapper'>\n                            <input\n                                type='radio'\n                                id='searchTypeIngButton'\n                                name='searchType'\n                                value='ing'\n                                onChange={this.updateSearchType}\n                                checked={this.state.searchType === 'ing' ? true : false}>\n                            </input>\n                            \n                            <label htmlFor='searchTypeIngButton'>Ingredient</label>\n                        </div>\n                    </div>\n\n                    <div id='inputReminder'>\n                        { this.state.emptyInput ?\n                            <h4>Please enter something to search</h4>\n                            : <p></p>\n                        }\n                    </div>\n\n                    <div id='loadingBar'>\n                        { this.state.loading ? \n                            <div>\n                                Searching...\n                                <BarLoader height={6} css={override}/>\n                            </div>\n                            : <p></p>\n                        }\n                    </div>\n                </form>\n                \n                <div id='results'>\n                    { !this.state.resultsFound ?\n                        <div id='failNotice'>No results found. Try again</div>\n                        : <p></p>\n                    }\n                    { this.state.results.length ?\n                        <SearchResults data={this.state.results}/>\n                        : <p></p>\n                    }\n                </div>\n\n                {/* Form redirects to this invisible iframe, keeping it on the same page */}\n                <iframe name='hiddenFrame' id='iframe' title='hidden'></iframe>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;\n","import React, {Component} from 'react';\nimport SearchBar from './searchBar.js';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div>\n                <SearchBar />\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, {Component} from 'react';\nimport '../styles/login.css';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            usernameInput: '',\n            passwordInput: ''\n        };\n    }\n\n    //Store the most recent inputs in state\n    updateInput = (val) => {\n        let { id, value } = val.target;\n        this.setState({ [id]: value });\n    }\n\n    submitPage = (val) => {\n        if (!this.state.usernameInput) {\n            console.log('PLEASE ENTER USERNAME');\n        }\n        if (!this.state.passwordInput) {\n            console.log('PLEASE ENTER PASSWORD');\n        }\n    }\n\n    render() {\n        return (\n            <div id='loginWrapper'>\n                <div id='loginHeader'>Log In</div>\n                <form\n                    name='loginForm'\n                    target='hiddenFrame'\n                    onSubmit={this.submitPage}>\n\n                    <div id='inputWrapper'>\n                        <div id='usernameInputWrapper'>\n                            <label id='usernameLabel' htmlFor='usernameInput'>Username:</label>\n                            <input\n                                name='UN'\n                                id='usernameInput'\n                                type='text'\n                                autoComplete='off'\n                                placeholder='Username'\n                                value={this.state.username}\n                                onChange={this.updateInput}>\n                            </input>\n                        </div>\n\n                        <div id='passwordInputWrapper'>\n                            <label id='passwordLabel' htmlFor='passwordInput'>Password:</label>\n                            <input\n                                name='PW'\n                                id='passwordInput'\n                                type='password'\n                                autoComplete='off'\n                                placeholder='Password'\n                                value={this.state.password}\n                                onChange={this.updateInput}>\n                            </input>\n                        </div>\n                    </div>\n\n                    <div id='submitButtonWrapper'>\n                        <button\n                            type='submit'\n                            id='submitButton'>\n                                Submit\n                        </button>\n                    </div>\n                </form>\n\n                {/* Form redirects to this invisible iframe, keeping it on the same page */}\n                <iframe name='hiddenFrame' id='iframe' title='hidden'></iframe>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React from 'react';\nimport Recipe from './components/recipe.js';\nimport Home from './components/home.js';\nimport Login from './components/login.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from 'react-router-dom';\n\nimport './styles/App.css';\n\nexport default function App() {\n  return (\n    <div>\n      <Router>\n\n        <div id='logoBanner'>\n          <Link to='/home' className='logo'>\n            MAGELLAN\n          </Link>\n\n          <Link to='/login' className='loginButton'>\n            Log In\n          </Link>\n        </div>\n\n        <Switch>\n          <Route path={'/recipe/:recipeid'} component={Recipe} />\n          <Route path={'/home'} component={Home} />\n          <Route path={'/login'} component={Login} />\n          <Route path={'/'}>\n            <Redirect to={'/home'} />\n          </Route>\n        </Switch>\n\n      </Router>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './styles/index.css';\n\nReactDOM.render (\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}