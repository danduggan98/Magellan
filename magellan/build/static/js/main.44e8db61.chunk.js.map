{"version":3,"sources":["components/recipe.js","components/searchCard.js","components/searchResults.js","components/searchBar.js","components/home.js","App.js","index.js"],"names":["ArrayToList","props","items","numSections","list","length","ordered","i","section","itemList","numItems","header","j","push","key","toString","Recipe","state","status","recipeID","match","params","recipeid","ingredients","directions","fetch","this","res","json","data","error","setState","URL","imageURL","author","recipeName","difficulty","totalTime","prepTime","inactiveTime","activeTime","cookTime","yield","source","Helmet","src","alt","width","target","rel","href","Component","SearchCard","recipe","info","link","_id","id","className","SearchResults","results","limit","lmt","overflow","Array","from","slice","map","SearchBar","getResults","a","input","fetchURL","searchType","loading","emptyInput","resultsFound","vals","searchResults","updateInput","val","value","updateSearchType","currentTarget","name","onSubmit","type","autoComplete","placeholder","onChange","checked","htmlFor","title","Home","App","to","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44e8db61.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { Helmet } from 'react-helmet';\n\n//Parse an array of ingredients or directions into a JSX list\nfunction ArrayToList(props) {\n    let items = [];\n\n    //Iterate through each section\n    const numSections = props.list.length;\n    const ordered = props.ordered;\n\n    for (let i = 0; i < numSections; i++) {\n        let section = [];\n        let itemList = props.list[i];\n\n        //Store each item in the inner array as an HTML list item\n        let numItems = itemList.length;\n        let header = itemList[0];\n\n        for (let j = 1; j < numItems; j++) {\n            section.push (\n                <li key={itemList[j].toString()}>\n                    {itemList[j]}\n                </li>\n            );\n        }\n\n        //Print the section header if noteworthy\n        if (header !== 'main') {\n            items.push (\n                <h4 key={header.toString()}>\n                    <u>{header}</u>\n                </h4>\n            );\n        }\n\n        //Print the list of items\n        items.push (\n            ordered ?\n                <ol key={section.toString()}>\n                    {section}\n                </ol>\n                :\n                <ul key={section.toString()}>\n                    {section}\n                </ul>\n        );\n    }\n\n    return (\n        <div>{items}</div>\n    );\n}\n\n//Display full recipe data\nclass Recipe extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: 1, //Remains 1 if the recipe is found, 0 otherwise\n            recipeID: props.match.params.recipeid, //URL parameter\n            ingredients: '',\n            directions: ''\n        };\n    }\n\n    //Gather data from server JSON response\n    async componentDidMount() {\n        const res = await fetch('/recipe/' + this.state.recipeID);\n        const data = await res.json();\n\n        //Recipe not found\n        if (data.error) {\n            this.setState({ status: 0 });\n        }\n        //Recipe found\n        else {\n            this.setState({\n                URL:          data.URL,\n                imageURL:     data.imageURL,\n                author:       data.author,\n                recipeName:   data.recipeName,\n                difficulty:   data.difficulty,\n                totalTime:    data.totalTime,\n                prepTime:     data.prepTime,\n                inactiveTime: data.inactiveTime,\n                activeTime:   data.activeTime,\n                cookTime:     data.cookTime,\n                yield:        data.yield,\n                ingredients:  data.ingredients,\n                directions:   data.directions,\n                source:       data.source\n            });\n        }\n    }\n\n    render() {\n        //Recipe not found\n        if (!this.state.status) {\n            return (\n                <div>\n                    <h1>Recipe not found!</h1>\n                    <h3>Please try again</h3>\n                </div>\n            );\n        }\n        //Recipe found\n        else {\n            return (\n                <div>\n                    { this.state.recipeName ?\n                        <Helmet>\n                            <title>{ \"Magellan - \" + this.state.recipeName }</title>\n                        </Helmet>\n                        :\n                        <Helmet>\n                            <title>{ \"Magellan\" }</title>\n                        </Helmet>\n                    }\n\n                    <h1>{this.state.recipeName}</h1>\n                    <h2>by {this.state.author}</h2>\n                    <h3>Courtesy of {this.state.source}</h3>\n\n                    { this.state.imageURL ?\n                        <img src={this.state.imageURL} alt='' width='600'></img> :\n                        <p></p>\n                    }\n\n                    <br></br>\n                    <a target='_blank' rel='noopener noreferrer' href={this.state.URL}>Original Recipe</a>\n                    \n                    <br></br>\n                    <h3>Difficulty: {this.state.difficulty} | Yield: {this.state.yield}</h3>\n                    \n                    <br></br>\n                    <h2>Total Time: {this.state.totalTime}</h2>\n\n                    <ul>\n                    { this.state.prepTime ?\n                        <li>\n                            <h4>{this.state.prepTime} prep time</h4>\n                        </li>\n                        : <p></p>\n                    }\n                        \n                    { this.state.cookTime ?\n                        <li>\n                            <h4>{this.state.cookTime} cook time</h4>\n                        </li>\n                        : <p></p>\n                    }\n\n                    { this.state.activeTime ?\n                        <li>\n                            <h4>{this.state.activeTime} active time</h4>\n                        </li>\n                        : <p></p>\n                    }\n\n                    { this.state.inactiveTime ?\n                        <li>\n                            <h4>{this.state.inactiveTime} inactive time</h4>\n                        </li>\n                        : <p></p>\n                    }\n                    </ul>\n\n                    <br></br>\n                    <h2>Ingredients:</h2>\n                    <ArrayToList list={this.state.ingredients} ordered={false}/>\n                    <br></br>\n\n                    <h2>Directions:</h2>\n                    <ArrayToList list={this.state.directions} ordered={true}/>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Recipe;\n","import React, {Component} from 'react';\nimport '../styles/searchCard.css';\n\nclass SearchCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            recipe: this.props.info\n        };\n    }\n\n    render() {\n        const data = this.state.recipe;\n        const link = `/recipe/${data._id}`;\n\n        return (\n            <div id='card'>\n                 <a className='recipeLink'\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    href={link}>\n                    \n                    <div id='cardInfo'>\n                        <div id='recipeName'>{data.recipeName}</div>\n                        <div id='author'>by {data.author}</div>\n                        <div id='totalTime'>{data.totalTime}</div>\n                    </div>\n                </a>\n            </div>\n        );\n    }\n}\n\nexport default SearchCard;\n","import React, {Component} from 'react';\nimport SearchCard from './searchCard.js';\nimport '../styles/searchResults.css';\n\nclass SearchResults extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: this.props.data,\n            limit: this.props.lmt\n        };\n    }\n\n    render() {\n        //See if there will be extra recipes for a new page\n        const overflow = (this.state.results.length > this.state.limit);\n        \n        //Grab the recipes we will show, up to the given limit\n        const res = Array.from(this.state.results);\n        const visible = res.slice(0, this.state.limit);\n\n        //Turn them into search cards\n        const list = visible.map(recipe => (\n            <SearchCard info={recipe} />\n        ));\n\n        return (\n            <div id='resultsContainer'>\n                <h2>Top Results:</h2>\n                <div id='resultsList'>{list}</div>\n\n                { overflow ?\n                    <div>See more results</div>\n                    : <p></p>\n                }\n            </div>\n        );\n    }\n}\n\nexport default SearchResults;\n","import React, {Component} from 'react';\nimport BarLoader from 'react-spinners/BarLoader';\nimport SearchResults from './searchResults.js';\nimport '../styles/searchBar.css';\n\nclass SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchType: 'name',\n            input: '',\n            emptyInput: false,\n            resultsFound: true,\n            loading: false,\n            results: []\n        };\n    }\n\n    //Launch a search in the server and store the results\n    getResults = async () => {\n\n        //Ensure they have entered something\n        if (this.state.input) {\n\n            //If so, querty the db\n            const fetchURL = `/search/${this.state.searchType}/${this.state.input}`;\n            this.setState({\n                results: [],\n                loading: true,\n                emptyInput: false\n            });\n\n            const res = await fetch(fetchURL); //Execute the search\n            const data = await res.json();\n\n            //No search results\n            if (data.error) {\n                this.setState({ resultsFound: false, loading: false });\n            }\n            //Create a list of items\n            else {\n                let items = [];\n                const vals = data.searchResults;\n                const numItems = vals.length;\n\n                for (let i = 0; i < numItems; i++) {\n                    items.push(vals[i]);\n                }\n\n                this.setState({\n                    resultsFound: true,\n                    loading: false,\n                    results: items\n                });\n            }\n        }\n        else {\n            this.setState({\n                emptyInput: true,\n                resultsFound: true, //Hide this notice if last search found nothing\n                results: []\n            });\n        }\n    }\n\n    //Save the user's current input in state\n    updateInput = (val) => {\n        this.setState({ input: val.target.value });\n    }\n\n    //Change the search type\n    updateSearchType = (val) => {\n        this.setState({ searchType: val.currentTarget.value });\n    }\n\n    // Search bar - form accepts the search and queries the db\n    render() {\n        const limit = 9; //Max number of recipes to print\n\n        return (\n            <div id='searchBarContainer'>\n                <form\n                    name='searchBar'\n                    target='hiddenFrame'\n                    onSubmit={this.getResults}>\n\n                    <input\n                        name='search'\n                        id='searchInput'\n                        type='text'\n                        autoComplete='off'\n                        placeholder='Search for recipes'\n                        onChange={this.updateInput}>\n                    </input>\n\n                    <button\n                        type='submit'\n                        id='searchButton'\n                        className='fa fa-search'>\n                    </button>\n\n                    <div id='searchType'>\n                        <input\n                            type='radio'\n                            id='searchTypeName'\n                            name='searchType'\n                            value='name'\n                            onChange={this.updateSearchType}\n                            checked={this.state.searchType === 'name' ? true : false}>\n                        </input>\n\n                        <label htmlFor=\"searchTypeName\">Recipe Name</label>\n                        <br></br>\n\n                        <input\n                            type='radio'\n                            id='searchTypeIng'\n                            name='searchType'\n                            value='ing'\n                            onChange={this.updateSearchType}\n                            checked={this.state.searchType === 'ing' ? true : false}>\n                        </input>\n                        \n                        <label htmlFor=\"searchTypeIng\">Ingredient</label>\n                        <br></br>\n                    </div>\n\n                    <div id='inputReminder'>\n                        { this.state.emptyInput ?\n                            <h4>Please enter something to search</h4>\n                            : <p></p>\n                        }\n                    </div>\n\n                    <div id='loadingBar'>\n                        { this.state.loading ? \n                            <div>\n                                Searching...\n                                <BarLoader />\n                            </div>\n                            : <p></p>\n                        }\n                    </div>\n                </form>\n                \n                <div id='results'>\n                    { !this.state.resultsFound ?\n                        <h3>No results found. Try again</h3>\n                        : <p></p>\n                    }\n                    { this.state.results.length ?\n                        <SearchResults data={this.state.results} lmt={limit} />\n                        : <p></p>\n                    }\n                </div>\n\n                {/* Form redirects to this invisible iframe, keeping it on the same page */}\n                <iframe name='hiddenFrame' id='iframe' title='hidden'></iframe>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;\n","import React, {Component} from 'react';\nimport SearchBar from './searchBar.js';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Find your next meal!</h2>\n                <SearchBar />\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport Recipe from './components/recipe.js';\nimport Home from './components/home.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from 'react-router-dom';\n\nimport './styles/App.css';\n\nexport default function App() {\n  return (\n    <div>\n      <Router>\n        \n        <div id=\"logoBanner\">\n          <Link to='/home' className=\"logo\">\n            MAGELLAN\n          </Link>\n        </div>\n\n        <Switch>\n          <Route path={'/recipe/:recipeid'} component={Recipe} />\n          <Route path={'/home'} component={Home} />\n          <Route path={'/'}>\n            <Redirect to={'/home'} />\n          </Route>\n        </Switch>\n\n      </Router>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './styles/index.css';\n\nReactDOM.render (\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}